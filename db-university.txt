Selezionare tutti gli studenti nati nel 1990 (160)
SELECT * FROM students WHERE date_of_birth LIKE '1990%'
--------------------------------------------------------------------
Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT * FROM courses WHERE cfu > 10;
--------------------------------------------------------------------
Selezionare tutti gli studenti che ad OGGI hanno almeno 30 anni compiuti (3725)
SELECT * FROM students WHERE TIMESTAMPDIFF(YEAR, date_of_birth, CURDATE()) >= 30;
--------------------------------------------------------------------
Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea (286)
SELECT * FROM courses WHERE period LIKE 'I semestre' AND year LIKE '1';
--------------------------------------------------------------------
Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 (21)
SELECT * FROM exams WHERE hour(hour)>=14 AND date = '2020-06-20';
--------------------------------------------------------------------
Selezionare tutti i corsi di laurea magistrale (38)
SELECT * FROM degrees WHERE level LIKE 'magistrale'
--------------------------------------------------------------------
Da quanti dipartimenti è composta l'università? (12)
SELECT * FROM departments;
--------------------------------------------------------------------
Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT * FROM teachers WHERE phone IS NULL;
--------------------------------------------------------------------
Inserire nella tabella degli studenti un nuovo record con i propri dati (per il campo degree_id, inserire un valore casuale)
INSERT INTO students(id,degree_id,name,surname,date_of_birth,fiscal_code,enrolment_date,registration_number,email) VALUES('5001','2','Prince','Prince','1995-06-06','XTFL3V95U99Z623A','2020-08-02','700523','prince@boolean.it');
--------------------------------------------------------------------
Cambiare il numero dell’ufficio del professor Pietro Rizzo in 126
UPDATE teachers SET office_address = 'non si sa dove abita' WHERE id = '58'
--------------------------------------------------------------------
Eliminare dalla tabella studenti il record creato precedentemente al punto 9
DELETE FROM students WHERE name = 'Prince' LIMIT 1;


20/06/2024
Query JOIN
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
CORSO DI ECONOMIA ID = 53
SELECT 
students.degree_id = '53',
students.name AS nome,
students.surname AS cognome,
degrees.name AS corso_di_laurea
FROM students 
JOIN degrees 
ON degrees.id = students.degree_id
WHERE students.degree_id = '53'

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
DIPARTIMENTI DI NEUROSCIENZE ID = 7
SELECT 
degrees.name AS nome,
degrees.level AS durata
FROM degrees
JOIN departments 
ON departments.id = degrees.department_id
WHERE departments.id = '7' AND degrees.level = 'magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT teachers.name AS nome_del_proff, 
teachers.surname AS cognome_del_proff,
courses.name AS nome_del_corso
FROM course_teacher 
JOIN teachers
ON course_teacher.teacher_id = teachers.id 
JOIN courses
ON course_teacher.course_id = courses.id
WHERE teacher_id = 44

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
SELECT 
students.surname AS cognome,
students.name AS name,
departments.name AS dipartimento,
degrees.name AS corso_di_laurea,
degrees.level AS durata
FROM students, degrees
JOIN departments
ON departments.id = degrees.department_id
WHERE degrees.id = students.degree_id
ORDER BY students.surname ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT 
degrees.name AS nome_corso_di_laurea,
courses.name AS nome_del_corso_della_laurea,
teachers.surname AS insegnante
FROM degrees, courses, teachers
JOIN course_teacher
ON course_teacher.teacher_id = teachers.id
WHERE degrees.id= course_teacher.course_id;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
SELECT DISTINCT 
teachers.surname AS cognome,
teachers.name AS nome
FROM teachers,course_teacher
JOIN courses
ON course_teacher.course_id = courses.id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE teachers.id = course_teacher.teacher_id AND departments.id = '5';


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,

/////////////////////////////////////////////////
GROPU BY

1. Contare quanti iscritti ci sono stati ogni anno
SELECT  COUNT(*) AS QuantIscrizioni FROM students GROUP BY YEAR(enrolment_date);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT COUNT(*) AS STESSOUFFICIO FROM teachers GROUP BY office_number;

3. Calcolare la media dei voti di ogni appello d'esame
SELECT AVG(vote) 
FROM exam_student GROUP BY exam_id;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT COUNT(*) FROM degrees GROUP BY degrees.department_id;
